@startuml
class apply_complex {
    +apply_complex(fr, fi, input, dtype = torch.complex128) : torch.tensor
}
class ComplexLinear {
    -fc_r : nn.Linear
    -fc_i : nn.Linear
    +ComplexLinear(in_features, out_features)
    +forward(input) : torch.tensor
}
class HardTahn_complex {
    -hard_real : nn.Hardtanh
    -hard_imag : nn.Hardtanh
    +HardTahn_complex()
    +forward(input) : torch.tensor
}
class ComplexNet {
    -complex_net : nn.Sequential
    -loss_f : Complex_MSE
    +ComplexNet(input_size, hidden_size)
}
apply_complex --> ComplexLinear
ComplexLinear --> HardTahn_complex
HardTahn_complex --> ComplexLinear
ComplexLinear --> ComplexNet
HardTahn_complex --> ComplexNet
ComplexNet ..> pl.LightningModule
ComplexNet ..> Rx_loader
@enduml
